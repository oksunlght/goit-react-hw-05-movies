{"version":3,"file":"static/js/439.5d1fe88c.chunk.js","mappings":"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","sources":["pages/MovieDetails.styled.jsx","pages/MovieDetails.jsx","utils/fetch-api.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const StyledLink = styled(Link)`\n  margin-bottom: 15px;\n  padding-left: 20px;\n  display: block;\n  color: black;\n  text-decoration: none;\n\n  &:hover,\n  &:focus {\n    color: orangered;\n  }\n`;\n\nexport const MovieContainer = styled.div`\n  display: flex;\n  align-items: center;\n\n  padding-left: 20px;\n  padding-bottom: 20px;\n\n  margin-bottom: 20px;\n\n  box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n`;\n\nexport const Poster = styled.img`\n  width: 180px;\n  height: auto;\n  margin-right: 15px;\n`;\n\nexport const MovieTitle = styled.h2`\n  margin-bottom: 15px;\n`;\n\nexport const Description = styled.p`\n  margin-bottom: 15px;\n  font-size: 14px;\n`;\n\nexport const MovieGenres = styled.ul`\n  display: flex;\n`;\n\nexport const Item = styled.li`\n  font-size: 14px;\n\n  &:not(:last-child) {\n    margin-right: 10px;\n  }\n`;\n\nexport const AddInfo = styled.p`\n  margin-left: 20px;\n  margin-bottom: 10px;\n`;\n\nexport const AddInfoItem = styled(Link)`\n  color: black;\n\n  &:hover,\n  &:focus {\n    color: orangered;\n  }\n`;\n\nexport const Marker = styled.span`\n  margin-left: 25px;\n  margin-right: 3px;\n`;\n\nexport const InfoItem = styled.li`\n  &:not(:last-child) {\n    margin-bottom: 8px;\n  }\n`;\n\nexport const InfoList = styled.ul`\n  padding-bottom: 20px;\n  margin-bottom: 20px;\n\n  box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n`;\n\nexport const Loader = styled.div`\n  margin-left: 20px;\n  margin-top: 50px;\n`;\n","import { Suspense } from 'react';\nimport { Outlet, useLocation, useParams } from 'react-router-dom';\nimport { useEffect, useRef, useState } from 'react';\nimport { fetchMovieDetails, setImageURL } from '../utils/fetch-api';\nimport { ThreeCircles } from 'react-loader-spinner';\nimport {\n  StyledLink,\n  MovieContainer,\n  Poster,\n  MovieTitle,\n  Description,\n  MovieGenres,\n  Item,\n  AddInfo,\n  AddInfoItem,\n  Marker,\n  InfoItem,\n  InfoList,\n  Loader,\n} from './MovieDetails.styled';\n\nconst MoviesDetails = () => {\n  const { movieId } = useParams();\n\n  const [movieInfo, setMovieInfo] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n\n  const location = useLocation();\n  const locationRef = useRef(location.state?.from ?? '/');\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    fetchMovieDetails(movieId)\n      .then(\n        ({ poster_path, original_title, vote_average, overview, genres }) => {\n          setMovieInfo({\n            poster_path,\n            original_title,\n            vote_average,\n            overview,\n            genres,\n          });\n          setIsLoading(false);\n        }\n      )\n      .catch(error => console.log(error));\n  }, [movieId]);\n\n  const { poster_path, original_title, vote_average, overview, genres } =\n    movieInfo;\n\n  return (\n    <>\n      <StyledLink to={locationRef.current}>&larr; Go back</StyledLink>\n      {!isLoading ? (\n        <>\n          {' '}\n          <MovieContainer>\n            <Poster\n              src={poster_path && setImageURL(poster_path)}\n              alt={original_title}\n            />\n            <div>\n              <MovieTitle>{original_title}</MovieTitle>\n              <Description>\n                User score: {Math.round((vote_average * 100) / 10)} %\n              </Description>\n              <Description>\n                <b>Overview</b>\n              </Description>\n              <Description>{overview}</Description>\n              <Description>\n                <b>Genres</b>\n              </Description>\n              <MovieGenres>\n                {genres &&\n                  genres.map(({ id, name }) => <Item key={id}>{name}</Item>)}\n              </MovieGenres>\n            </div>\n          </MovieContainer>\n          <AddInfo>Additional information</AddInfo>\n          <InfoList>\n            <InfoItem>\n              <Marker>&#8226;</Marker>\n              <AddInfoItem to=\"cast\">Cast</AddInfoItem>\n            </InfoItem>\n            <InfoItem>\n              <Marker>&#8226;</Marker>\n              <AddInfoItem to=\"reviews\">Reviews</AddInfoItem>\n            </InfoItem>\n          </InfoList>\n        </>\n      ) : (\n        <Loader>\n          <ThreeCircles\n            height=\"100\"\n            width=\"100\"\n            color=\"orangered\"\n            visible={true}\n          />\n        </Loader>\n      )}\n      <Suspense\n        fallback={\n          <Loader>\n            <ThreeCircles\n              height=\"100\"\n              width=\"100\"\n              color=\"orangered\"\n              visible={true}\n            />\n          </Loader>\n        }\n      >\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MoviesDetails;\n","const API_KEY = '59106e174e5800a0537739a6d2a5791b';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nconst params = new URLSearchParams({\n  api_key: API_KEY,\n});\n\nexport const fetchMoviesList = () => {\n  const url = `${BASE_URL}/trending/movie/day?${params}`;\n  return fetch(url)\n    .then(r => r.json())\n    .then(res => res.results)\n    .catch(error => console.log(error));\n};\n\nexport const fetchMovieDetails = id => {\n  const url = `${BASE_URL}/movie/${id}?${params}`;\n\n  return fetch(url)\n    .then(r => r.json())\n    .then(res => res)\n    .catch(error => console.log(error));\n};\n\nexport const fetchCast = id => {\n  const url = `${BASE_URL}/movie/${id}/credits?${params}`;\n\n  return fetch(url)\n    .then(r => r.json())\n    .then(res => res)\n    .catch(error => console.log(error));\n};\n\nexport const fetchReviews = id => {\n  const url = `${BASE_URL}/movie/${id}/reviews?${params}`;\n\n  return fetch(url)\n    .then(r => r.json())\n    .then(res => res)\n    .catch(error => console.log(error));\n};\n\nexport const fetchMoviesOnSearch = query => {\n  const url = `${BASE_URL}/search/movie?query=${query}&${params}`;\n\n  return fetch(url)\n    .then(r => r.json())\n    .then(res => res)\n    .catch(error => console.log(error));\n};\n\nexport const setImageURL = path => {\n  const url = `https://image.tmdb.org/t/p/w500/${path}`;\n  return url;\n};\n"],"names":["StyledLink","styled","Link","MovieContainer","Poster","MovieTitle","Description","MovieGenres","Item","AddInfo","AddInfoItem","Marker","InfoItem","InfoList","Loader","movieId","useParams","useState","movieInfo","setMovieInfo","isLoading","setIsLoading","location","useLocation","locationRef","useRef","state","from","useEffect","fetchMovieDetails","then","poster_path","original_title","vote_average","overview","genres","catch","error","console","log","to","current","height","width","color","visible","src","setImageURL","alt","Math","round","map","id","name","Suspense","fallback","BASE_URL","params","URLSearchParams","api_key","fetchMoviesList","url","fetch","r","json","res","results","fetchCast","fetchReviews","fetchMoviesOnSearch","query","path"],"sourceRoot":""}