{"version":3,"file":"static/js/29.e68400d7.chunk.js","mappings":"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","sources":["components/Cast.styled.jsx","components/Cast.jsx","utils/fetch-api.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Photo = styled.img`\n  width: 140px;\n  margin-bottom: 10px;\n  margin-right: 20px;\n`;\n\nexport const CastName = styled.p`\n  &:not(:last-child) {\n    margin-bottom: 8px;\n  }\n`;\n\nexport const CastList = styled.ul`\n  margin-left: 20px;\n`;\n\nexport const CastItem = styled.li`\n  display: flex;\n  align-items: center;\n`;\n\nexport const Loader = styled.div`\n  margin-left: 20px;\n  margin-top: 50px;\n`;\n\nexport const NoCast = styled.p`\n  margin-left: 20px;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchCast, setImageURL } from '../utils/fetch-api';\nimport { ThreeCircles } from 'react-loader-spinner';\nimport {\n  Photo,\n  CastName,\n  CastList,\n  CastItem,\n  Loader,\n  NoCast,\n} from './Cast.styled';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n\n  const [cast, setCast] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    fetchCast(movieId)\n      .then(({ cast }) => {\n        setCast(cast);\n        setIsLoading(false);\n      })\n      .catch(error => console.log(error));\n  }, [movieId]);\n\n  return (\n    <div>\n      {!isLoading ? (\n        <>\n          {cast.length !== 0 ? (\n            <CastList>\n              {cast.map(({ character, id, original_name, profile_path }) => {\n                return (\n                  <CastItem key={id}>\n                    <Photo\n                      src={profile_path && setImageURL(profile_path)}\n                      alt={original_name}\n                    />\n                    <div>\n                      <CastName>{original_name}</CastName>\n                      <CastName>Character: {character} </CastName>\n                    </div>\n                  </CastItem>\n                );\n              })}\n            </CastList>\n          ) : (\n            <NoCast>We don't have cast list for this movie.</NoCast>\n          )}\n        </>\n      ) : (\n        <Loader>\n          <ThreeCircles\n            height=\"100\"\n            width=\"100\"\n            color=\"orangered\"\n            visible={true}\n          />\n        </Loader>\n      )}\n    </div>\n  );\n};\n\nexport default Cast;\n","const API_KEY = '59106e174e5800a0537739a6d2a5791b';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nconst params = new URLSearchParams({\n  api_key: API_KEY,\n});\n\nexport const fetchMoviesList = () => {\n  const url = `${BASE_URL}/trending/movie/day?${params}`;\n  return fetch(url)\n    .then(r => r.json())\n    .then(res => res.results)\n    .catch(error => console.log(error));\n};\n\nexport const fetchMovieDetails = id => {\n  const url = `${BASE_URL}/movie/${id}?${params}`;\n\n  return fetch(url)\n    .then(r => r.json())\n    .then(res => res)\n    .catch(error => console.log(error));\n};\n\nexport const fetchCast = id => {\n  const url = `${BASE_URL}/movie/${id}/credits?${params}`;\n\n  return fetch(url)\n    .then(r => r.json())\n    .then(res => res)\n    .catch(error => console.log(error));\n};\n\nexport const fetchReviews = id => {\n  const url = `${BASE_URL}/movie/${id}/reviews?${params}`;\n\n  return fetch(url)\n    .then(r => r.json())\n    .then(res => res)\n    .catch(error => console.log(error));\n};\n\nexport const fetchMoviesOnSearch = query => {\n  const url = `${BASE_URL}/search/movie?query=${query}&${params}`;\n\n  return fetch(url)\n    .then(r => r.json())\n    .then(res => res)\n    .catch(error => console.log(error));\n};\n\nexport const setImageURL = path => {\n  const url = `https://image.tmdb.org/t/p/w500/${path}`;\n  return url;\n};\n"],"names":["Photo","styled","CastName","CastList","CastItem","Loader","NoCast","movieId","useParams","useState","cast","setCast","isLoading","setIsLoading","useEffect","fetchCast","then","catch","error","console","log","height","width","color","visible","length","map","character","id","original_name","profile_path","src","setImageURL","alt","BASE_URL","params","URLSearchParams","api_key","fetchMoviesList","url","fetch","r","json","res","results","fetchMovieDetails","fetchReviews","fetchMoviesOnSearch","query","path"],"sourceRoot":""}